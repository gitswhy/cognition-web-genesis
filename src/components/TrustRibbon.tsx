import { useState, useEffect } from "react";
import { motion } from "framer-motion";

const TrustRibbon = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  
  const partners = [
    { 
      name: "GitHub", 
      logo: (
        <svg viewBox="0 0 24 24" className="w-8 h-8 fill-current">
          <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z"/>
        </svg>
      )
    },
    { 
      name: "GitLab", 
      logo: (
        <svg viewBox="0 0 24 24" className="w-8 h-8 fill-current text-orange-500">
          <path d="M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 01-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 014.82 2a.43.43 0 01.58 0 .42.42 0 01.11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0118.6 2a.43.43 0 01.58 0 .42.42 0 01.11.18l2.44 7.51L23 13.45a.84.84 0 01-.35.94z"/>
        </svg>
      )
    },
    { 
      name: "Snyk", 
      logo: (
        <svg viewBox="0 0 24 24" className="w-8 h-8 fill-current text-purple-500">
          <path d="M22.5 9.5v5l-10.5 6-10.5-6v-5l10.5-6 10.5 6zm-11.5 4.5v6l-8.5-4.8v-3.2l8.5 2zm1 0l8.5-2v3.2l-8.5 4.8v-6zm8.5-3.2l-9.5-2.5-9.5 2.5 9.5-5.3 9.5 5.3z"/>
        </svg>
      )
    },
    { 
      name: "Linear", 
      logo: (
        <svg viewBox="0 0 24 24" className="w-8 h-8 fill-current text-blue-400">
          <path d="M2 12L22 2L12 22L2 12Z"/>
        </svg>
      )
    },
    { 
      name: "Cursor", 
      logo: (
        <svg viewBox="0 0 24 24" className="w-8 h-8 fill-current text-yellow-500">
          <path d="M7.5 6.5L16.5 9.5L9.5 16.5L6.5 7.5L7.5 6.5Z"/>
          <path d="M12 2L22 12L12 22L2 12L12 2Z" stroke="currentColor" strokeWidth="2" fill="none"/>
        </svg>
      )
    },
    { 
      name: "Docker", 
      logo: (
        <svg viewBox="0 0 24 24" className="w-8 h-8 fill-current text-blue-500">
          <path d="M13.983 11.078h2.119a.186.186 0 00.186-.185V9.006a.186.186 0 00-.186-.186h-2.119a.185.185 0 00-.185.185v1.888c0 .102.083.185.185.185m-2.954-5.43h2.118a.186.186 0 00.186-.186V3.574a.186.186 0 00-.186-.185h-2.118a.185.185 0 00-.185.185v1.888c0 .102.082.185.185.186m0 2.716h2.118a.187.187 0 00.186-.186V6.29a.186.186 0 00-.186-.185h-2.118a.185.185 0 00-.185.185v1.888c0 .102.082.185.185.186m-2.93 0h2.12a.186.186 0 00.184-.186V6.29a.185.185 0 00-.185-.185H8.1a.185.185 0 00-.185.185v1.888c0 .102.083.185.185.186m-2.964 0h2.119a.186.186 0 00.185-.186V6.29a.185.185 0 00-.185-.185H5.136a.186.186 0 00-.186.185v1.888c0 .102.084.185.186.186m5.893 2.715h2.118a.186.186 0 00.186-.185V9.006a.186.186 0 00-.186-.186h-2.118a.185.185 0 00-.185.185v1.888c0 .102.082.185.185.185m-2.93 0h2.12a.185.185 0 00.184-.185V9.006a.185.185 0 00-.184-.186h-2.12a.185.185 0 00-.184.185v1.888c0 .102.083.185.185.185m-2.964 0h2.119a.185.185 0 00.185-.185V9.006a.185.185 0 00-.184-.186h-2.12a.186.186 0 00-.186.186v1.887c0 .102.084.185.186.185m0 2.715h2.119a.185.185 0 00.185-.185v-1.888a.185.185 0 00-.184-.185h-2.12a.185.185 0 00-.185.185v1.888c0 .102.084.185.186.185m8.04-2.715h4.418c.036 0 .07.014.097.039.027.025.042.06.042.097v1.888a.139.139 0 01-.139.144h-4.418c-.102 0-.185-.083-.185-.185V9.006a.185.185 0 01.185-.186"/>
        </svg>
      )
    },
    { 
      name: "AWS", 
      logo: (
        <svg viewBox="0 0 24 24" className="w-8 h-8 fill-current text-orange-400">
          <path d="M6.763 10.036c0 .296.032.535.088.71.064.176.144.368.256.576a.8.8 0 01.08.32c0 .128-.048.256-.144.39l-.472.312a.36.36 0 01-.192.064c-.074 0-.148-.036-.224-.108a2.73 2.73 0 01-.256-.332 6.718 6.718 0 01-.24-.332c-.592.696-1.336 1.044-2.224 1.044-.632 0-1.14-.18-1.52-.54-.38-.36-.572-.84-.572-1.436 0-.636.224-1.148.68-1.54.456-.39 1.064-.588 1.824-.588.252 0 .512.02.788.064.276.044.556.108.844.192v-.636c0-.66-.136-1.12-.408-1.38-.268-.26-.728-.39-1.376-.39-.296 0-.6.036-.912.108-.312.072-.616.172-.912.296-.136.06-.236.096-.296.108a.506.506 0 01-.128.02c-.112 0-.168-.08-.168-.244v-.384c0-.128.016-.224.056-.28a.598.598 0 01.224-.164c.296-.152.648-.276 1.056-.372.408-.096.844-.144 1.308-.144.996 0 1.724.224 2.192.676.464.452.696 1.132.696 2.044v2.684zm-3.064 1.14c.244 0 .496-.044.756-.132.26-.088.492-.232.68-.424.116-.12.2-.252.248-.396.048-.144.08-.32.08-.528v-.256a6.405 6.405 0 00-.688-.156 5.364 5.364 0 00-.672-.044c-.476 0-.824.092-1.048.28-.224.184-.336.448-.336.792 0 .328.084.576.244.744.164.172.408.256.736.256v.004zm6.096-.876c-.128 0-.216-.024-.268-.076-.052-.052-.096-.168-.132-.344l-1.456-4.796c-.036-.172-.056-.284-.056-.336 0-.132.068-.204.2-.204h.816c.136 0 .228.024.276.076.056.052.096.168.128.344l1.04 4.096 .964-4.096c.028-.176.068-.292.124-.344.056-.052.148-.076.28-.076h.668c.132 0 .224.024.28.076.056.052.1.168.124.344l.976 4.144 1.072-4.144c.032-.176.076-.292.128-.344.056-.052.148-.076.276-.076h.776c.132 0 .2.068.2.204 0 .04-.008.084-.02.132-.012.048-.032.124-.068.228l-1.488 4.796c-.036.176-.08.292-.132.344-.052.052-.14.076-.268.076h-.72c-.132 0-.224-.024-.28-.076-.056-.052-.1-.172-.124-.348l-.96-3.996-.948 4c-.028.176-.068.296-.124.348-.056.052-.148.076-.28.076h-.72zm5.752.8c-.728 0-1.3-.128-1.716-.384-.416-.256-.624-.616-.624-1.08 0-.192.036-.36.108-.504.072-.144.176-.268.308-.372.132-.104.284-.184.456-.24.172-.056.364-.088.576-.096.496-.016.864-.044 1.104-.084.24-.04.36-.112.36-.216v-.096c0-.224-.068-.38-.204-.472-.14-.092-.356-.136-.652-.136-.628 0-1.044.124-1.248.372-.068.084-.12.124-.156.124-.052 0-.08-.04-.08-.12v-.384c0-.064.008-.116.028-.156.02-.04.056-.08.108-.116.26-.136.572-.244.936-.324.364-.08.728-.12 1.092-.12.836 0 1.448.192 1.844.576.396.384.592.956.592 1.716v2.256c0 .132-.068.2-.2.2h-.668c-.132 0-.204-.064-.216-.192l-.044-.296c-.216.196-.452.344-.708.444-.256.1-.544.148-.864.148v-.004zm1.312-.816c.22 0 .424-.04.612-.116.188-.076.344-.196.468-.356.076-.096.132-.2.168-.312.036-.112.056-.244.056-.396v-.352c-.132.048-.272.084-.424.108-.152.024-.308.044-.472.056-.376.028-.656.076-.84.148-.184.072-.276.196-.276.372 0 .176.056.304.172.384.116.084.296.124.536.124v.004zm2.808 2.336c-.132 0-.2-.068-.2-.2v-6.936c0-.132.068-.2.2-.2h.872c.132 0 .2.068.2.2v6.936c0 .132-.068.2-.2.2h-.872z"/>
        </svg>
      )
    },
    { 
      name: "Vercel", 
      logo: (
        <svg viewBox="0 0 24 24" className="w-8 h-8 fill-current">
          <path d="M12 2L22 20H2L12 2Z"/>
        </svg>
      )
    }
  ];

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % Math.ceil(partners.length / 4));
    }, 3000);
    return () => clearInterval(timer);
  }, []);

  return (
    <motion.section 
      className="py-12 border-y border-terminal-green/10"
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6 }}
      viewport={{ once: true }}
    >
      <div className="container mx-auto px-4 lg:px-20">
        <motion.div 
          className="text-center mb-8"
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          viewport={{ once: true }}
        >
          <p className="text-sm text-foreground/60 font-medium tracking-wide uppercase">
            Trusted by teams using
          </p>
        </motion.div>
        
        <div className="overflow-hidden">
          <div 
            className="flex transition-transform duration-1000 ease-in-out"
            style={{ transform: `translateX(-${currentIndex * 100}%)` }}
          >
            {Array.from({ length: Math.ceil(partners.length / 4) }, (_, slideIndex) => (
              <div key={slideIndex} className="flex justify-center items-center space-x-8 md:space-x-12 lg:space-x-16 min-w-full">
                {partners.slice(slideIndex * 4, slideIndex * 4 + 4).map((partner, index) => (
                  <div 
                    key={partner.name}
                    className="flex flex-col items-center group cursor-pointer"
                  >
                    <div className="text-foreground/70 group-hover:text-terminal-green group-hover:scale-110 transition-all duration-300">
                      {partner.logo}
                    </div>
                    <span className="text-xs font-medium text-foreground/70 group-hover:text-terminal-green transition-colors">
                      {partner.name}
                    </span>
                  </div>
                ))}
              </div>
            ))}
          </div>
        </div>

        <div className="flex justify-center mt-6 space-x-2">
          {Array.from({ length: Math.ceil(partners.length / 4) }, (_, index) => (
            <button
              key={index}
              onClick={() => setCurrentIndex(index)}
              className={`w-2 h-2 rounded-full transition-colors duration-200 ${
                index === currentIndex ? 'bg-terminal-green' : 'bg-foreground/20'
              }`}
            />
          ))}
        </div>
      </div>
    </motion.section>
  );
};

export default TrustRibbon;